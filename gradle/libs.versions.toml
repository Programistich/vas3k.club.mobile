[versions]
agp = "8.7.3"
kotlin = "2.1.0"
kotlin-coroutines = "1.10.1"
kotlin-serialization-runtime = "1.7.3"
kotlin-datetime = "0.6.1" # https://github.com/Kotlin/kotlinx-datetime/releases
kotlin-immutable = "0.3.8"
ksp = "2.1.0-1.0.29"
# DI
kotlin-inject = "0.7.2"
kotlin-inject-anvil = "0.1.1"

# Navigation
decompose = "3.2.2"
essenty = "2.4.0"

# Linters
detekt = "1.23.7" # https://detekt.dev/docs/gettingstarted/gradle/
detekt-ruleset-compiler = "0.0.4" # https://github.com/BraisGabin/detekt-compiler-rules/releases
detekt-ruleset-compose = "0.4.22" # https://github.com/mrmans0n/compose-rules/releases
detekt-ruleset-decompose = "1.0.1" # https://github.com/LionZXY/detekt-decompose-rule/releases

timber = "5.0.1" # https://github.com/JakeWharton/timber/releases
androidx-activity-compose = "1.9.3"
androidx-annotation = "1.9.1"
androidx-core = "1.15.0"
androidx-appcompat = "1.7.0" # https://developer.android.com/jetpack/androidx/releases/appcompat

# Others
ktor = "3.0.3" # https://ktor.io/
settings = "1.3.0"
compose-placeholder = "1.0.8" # https://github.com/eygraber/compose-placeholder/releases
buildkonfig = "5.5.1"
multiplatform-compose = "1.7.3"
atomicflu = "0.26.1" # https://github.com/Kotlin/kotlinx-atomicfu


[libraries]
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-ksp-gradle = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
compose-multiplatform-gradle = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "multiplatform-compose" }
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradle = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }

# Kotlin Inject
kotlin-inject-ksp = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlin-inject" }
kotlin-inject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime-kmp", version.ref = "kotlin-inject" }
kotlin-inject-anvil-ksp = { module = "software.amazon.lastmile.kotlin.inject.anvil:compiler", version.ref = "kotlin-inject-anvil" }
kotlin-inject-anvil-runtime = { module = "software.amazon.lastmile.kotlin.inject.anvil:runtime", version.ref = "kotlin-inject-anvil" }
kotlin-inject-anvil-runtime-optional = { module = "software.amazon.lastmile.kotlin.inject.anvil:runtime-optional", version.ref = "kotlin-inject-anvil" }

# Linters
detekt-ruleset-compiler = { module = "com.braisgabin.detekt:kotlin-compiler-wrapper", version.ref = "detekt-ruleset-compiler" }
detekt-ruleset-ktlint = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-ruleset-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "detekt-ruleset-compose" }
detekt-ruleset-decompose = { module = "uk.kulikov.detekt.decompose:decompose-detekt-rules", version.ref = "detekt-ruleset-decompose" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-composeExtension = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
essenty-lifecycle-coroutines = { module = "com.arkivanov.essenty:lifecycle-coroutines", version.ref = "essenty" }


# Andriod-only
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js-wasm-js", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization-runtime" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlin-coroutines"}
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlin-immutable" }

# Others
atomicflu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicflu" }
settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settings-observable = { module = "com.russhwolf:multiplatform-settings-make-observable", version.ref = "settings" }
settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }
compose-placeholder = { module = "com.eygraber:compose-placeholder", version.ref = "compose-placeholder" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "multiplatform-compose" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
buildkonfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildkonfig" }
atomicflu = { id = "org.jetbrains.kotlinx.atomicfu", version.ref = "atomicflu" }